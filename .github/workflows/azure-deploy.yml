name: Deploy to Azure

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  TERRAFORM_VERSION: 1.5.0
  PYTHON_VERSION: "3.11"

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./infra

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -no-color
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    environment: production
    needs: terraform-plan
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    defaults:
      run:
        shell: bash
        working-directory: ./infra

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

      - name: Get Terraform Outputs
        id: terraform-outputs
        run: |
          echo "storage_account_name=$(terraform output -raw storage_account_name)" >> $GITHUB_OUTPUT
          echo "container_name=$(terraform output -raw container_name)" >> $GITHUB_OUTPUT

    outputs:
      storage_account_name: ${{ steps.terraform-outputs.outputs.storage_account_name }}
      container_name: ${{ steps.terraform-outputs.outputs.container_name }}

  test-python-app:
    name: "Test Python Application"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install azure-storage-blob pytest flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test Python script syntax
        run: python -m py_compile upload_to_blob.py

  deploy-application:
    name: "Deploy Application"
    runs-on: ubuntu-latest
    needs: [terraform-apply, test-python-app]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install azure-storage-blob

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Test Azure Connection and Upload Test File
        run: |
          # Create a test file
          echo "Test deployment from GitHub Actions - $(date)" > test-deployment.txt
          
          # Get storage account connection string
          STORAGE_ACCOUNT_NAME="${{ needs.terraform-apply.outputs.storage_account_name }}"
          RESOURCE_GROUP="healthcare-content-rg"
          
          CONNECTION_STRING=$(az storage account show-connection-string \
            --name $STORAGE_ACCOUNT_NAME \
            --resource-group $RESOURCE_GROUP \
            --output tsv)
          
          # Export the connection string for the Python script
          export AZURE_STORAGE_CONNECTION_STRING="$CONNECTION_STRING"
          
          # Test the upload functionality
          python -c "
          import os
          from upload_to_blob import upload_file_to_blob
          
          connection_string = os.environ['AZURE_STORAGE_CONNECTION_STRING']
          container_name = '${{ needs.terraform-apply.outputs.container_name }}'
          
          try:
              url = upload_file_to_blob('test-deployment.txt', 'test-deployment.txt', connection_string, container_name)
              print('Successfully uploaded test file to: ' + url)
          except Exception as e:
              print('Error uploading file: ' + str(e))
              exit(1)
          "